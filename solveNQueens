class Solution {
public:
    bool safe(vector<string>s,int i, int j){
        for(int x=i-1;x>=0;x--){
            if(s[x][j]=='Q')return false;
        }
        for(int x=i-1,y=j+1;x>=0 && y<s.size();x--,y++){
            if(s[x][y]=='Q')return false;
        }
        for(int x=i-1, y=j-1;x>=0 && y>=0;x--,y--){
            if(s[x][y]=='Q')return false;
        }
        return true;
    }
    void solveQueens(int i, int n, vector<string>temp,vector<vector<string>>&ans){
        if(i>=n){
            ans.push_back(temp);
            return;
        }
        for(int j=0;j<n;j++){
            if(safe(temp,i,j)){
                temp[i][j]='Q';
                solveQueens(i+1,n,temp,ans);
                temp[i][j]='.';
            }
        }
    }
    vector<vector<string>> solveNQueens(int n) {
        vector<vector<string>>ans;
        vector<string>temp(n,"");
        string s(n,'.');
        for(int i=0;i<n;i++)temp[i]=s;
        solveQueens(0,n,temp,ans);
        return ans;
    }
};
