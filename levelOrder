/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if(root==NULL)return {};
        vector<vector<int>>ans;
        queue<Node*>q;
        q.push(root);
        q.push(NULL);
        vector<int>x;
        while(q.size()){
            Node*curr=q.front();
            q.pop();
            if(curr==NULL){
            ans.push_back(x);
            x.clear();
            if(q.size())
            q.push(NULL);
            }
            else{
                x.push_back(curr->val);
                for(int i=0;i<curr->children.size();i++){
                q.push(curr->children[i]);
                }
            }
        }
        return ans;
    }
};
