class Solution {
public:
    int garbageCollection(vector<string>& garbage, vector<int>& travel) {
        int ans=0;
        vector<int>pref;
        pref.push_back(0);
        for(int i=0;i<travel.size();i++){
        pref.push_back(pref[i]+travel[i]);
        }
        int a=0,b=0,c=0;
        for(int i=0;i<garbage.size();i++){
            int m=0,p=0,g=0;
            for(auto jt:garbage[i]){
                if(jt=='M')m++;
                if(jt=='P')p++;
                if(jt=='G')g++;
            }
            if(m){
                ans+=(m+pref[i]-pref[a]);
                a=i;
            }
            if(p){
                ans+=(p+pref[i]-pref[b]);
                b=i;
            }
            if(g){
                ans+=(g+pref[i]-pref[c]);
                c=i;
            }
        }
        return ans;
    }
};
